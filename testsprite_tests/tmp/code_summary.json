{
  "tech_stack": [
    "TypeScript",
    "React + Vite",
    "TailwindCSS",
    "Node.js serverless routes (Vercel style)",
    "Supabase",
    "Axios"
  ],
  "features": [
    {
      "name": "Health Check",
      "description": "Simple API endpoint to verify server health and env presence",
      "files": ["api/health.js"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {"title": "Health API", "version": "1.0.0"},
        "paths": {
          "/api/health": {
            "get": {
              "summary": "Health status",
              "responses": {
                "200": {"description": "OK"},
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Crypto Prices",
      "description": "Fetches top crypto prices via CoinGecko with retry and cache",
      "files": ["api/crypto-prices.js"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {"title": "Crypto Prices API", "version": "1.0.0"},
        "paths": {
          "/api/crypto-prices": {
            "get": {
              "summary": "Get top crypto prices",
              "responses": {
                "200": {"description": "List of prices"},
                "500": {"description": "Failed to fetch"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Subscribe Email",
      "description": "Creates or updates a user in Supabase for newsletter subscription",
      "files": ["api/save-email-to-supabase.js", "src/integrations/supabase/auth.ts", "supabase/**"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {"title": "Subscription API", "version": "1.0.0"},
        "paths": {
          "/api/save-email-to-supabase": {
            "post": {
              "summary": "Subscribe email",
              "requestBody": {"required": true},
              "responses": {
                "200": {"description": "Subscribed or already subscribed"},
                "400": {"description": "Invalid email"},
                "405": {"description": "Method not allowed"},
                "500": {"description": "Server or supabase error"}
              }
            }
          }
        }
      }
    }
  ]
}
